// Code generated by protoc-gen-go. DO NOT EDIT.
// source: process_instance.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ProcessInstanceListReq struct {
	BusinessKey          string   `protobuf:"bytes,1,opt,name=businessKey,proto3" json:"businessKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProcessInstanceListReq) Reset()         { *m = ProcessInstanceListReq{} }
func (m *ProcessInstanceListReq) String() string { return proto.CompactTextString(m) }
func (*ProcessInstanceListReq) ProtoMessage()    {}
func (*ProcessInstanceListReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_108d1fa5d0611196, []int{0}
}

func (m *ProcessInstanceListReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProcessInstanceListReq.Unmarshal(m, b)
}
func (m *ProcessInstanceListReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProcessInstanceListReq.Marshal(b, m, deterministic)
}
func (m *ProcessInstanceListReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProcessInstanceListReq.Merge(m, src)
}
func (m *ProcessInstanceListReq) XXX_Size() int {
	return xxx_messageInfo_ProcessInstanceListReq.Size(m)
}
func (m *ProcessInstanceListReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ProcessInstanceListReq.DiscardUnknown(m)
}

var xxx_messageInfo_ProcessInstanceListReq proto.InternalMessageInfo

func (m *ProcessInstanceListReq) GetBusinessKey() string {
	if m != nil {
		return m.BusinessKey
	}
	return ""
}

type ProcessInstanceListResp struct {
	Items                []*ProcessInstanceItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Code                 int64                  `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Err                  *CamundaError          `protobuf:"bytes,3,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ProcessInstanceListResp) Reset()         { *m = ProcessInstanceListResp{} }
func (m *ProcessInstanceListResp) String() string { return proto.CompactTextString(m) }
func (*ProcessInstanceListResp) ProtoMessage()    {}
func (*ProcessInstanceListResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_108d1fa5d0611196, []int{1}
}

func (m *ProcessInstanceListResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProcessInstanceListResp.Unmarshal(m, b)
}
func (m *ProcessInstanceListResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProcessInstanceListResp.Marshal(b, m, deterministic)
}
func (m *ProcessInstanceListResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProcessInstanceListResp.Merge(m, src)
}
func (m *ProcessInstanceListResp) XXX_Size() int {
	return xxx_messageInfo_ProcessInstanceListResp.Size(m)
}
func (m *ProcessInstanceListResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ProcessInstanceListResp.DiscardUnknown(m)
}

var xxx_messageInfo_ProcessInstanceListResp proto.InternalMessageInfo

func (m *ProcessInstanceListResp) GetItems() []*ProcessInstanceItem {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *ProcessInstanceListResp) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ProcessInstanceListResp) GetErr() *CamundaError {
	if m != nil {
		return m.Err
	}
	return nil
}

type ProcessInstanceItem struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DefinitionId         string   `protobuf:"bytes,2,opt,name=definitionId,proto3" json:"definitionId,omitempty"`
	BusinessKey          string   `protobuf:"bytes,3,opt,name=businessKey,proto3" json:"businessKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProcessInstanceItem) Reset()         { *m = ProcessInstanceItem{} }
func (m *ProcessInstanceItem) String() string { return proto.CompactTextString(m) }
func (*ProcessInstanceItem) ProtoMessage()    {}
func (*ProcessInstanceItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_108d1fa5d0611196, []int{2}
}

func (m *ProcessInstanceItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProcessInstanceItem.Unmarshal(m, b)
}
func (m *ProcessInstanceItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProcessInstanceItem.Marshal(b, m, deterministic)
}
func (m *ProcessInstanceItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProcessInstanceItem.Merge(m, src)
}
func (m *ProcessInstanceItem) XXX_Size() int {
	return xxx_messageInfo_ProcessInstanceItem.Size(m)
}
func (m *ProcessInstanceItem) XXX_DiscardUnknown() {
	xxx_messageInfo_ProcessInstanceItem.DiscardUnknown(m)
}

var xxx_messageInfo_ProcessInstanceItem proto.InternalMessageInfo

func (m *ProcessInstanceItem) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ProcessInstanceItem) GetDefinitionId() string {
	if m != nil {
		return m.DefinitionId
	}
	return ""
}

func (m *ProcessInstanceItem) GetBusinessKey() string {
	if m != nil {
		return m.BusinessKey
	}
	return ""
}

func init() {
	proto.RegisterType((*ProcessInstanceListReq)(nil), "pb.ProcessInstanceListReq")
	proto.RegisterType((*ProcessInstanceListResp)(nil), "pb.ProcessInstanceListResp")
	proto.RegisterType((*ProcessInstanceItem)(nil), "pb.ProcessInstanceItem")
}

func init() { proto.RegisterFile("process_instance.proto", fileDescriptor_108d1fa5d0611196) }

var fileDescriptor_108d1fa5d0611196 = []byte{
	// 260 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0x3f, 0x4b, 0xf5, 0x30,
	0x14, 0x87, 0xdf, 0xb4, 0xf7, 0x15, 0xee, 0xe9, 0x45, 0x25, 0xc2, 0xbd, 0xa5, 0x2e, 0x25, 0x53,
	0x17, 0x3b, 0xd4, 0xcd, 0x4d, 0xc4, 0xa1, 0xe8, 0x20, 0xc1, 0x5d, 0xda, 0xe6, 0x08, 0x41, 0x9a,
	0xc4, 0x9c, 0xdc, 0xc1, 0xcd, 0x8f, 0x2e, 0xfd, 0x33, 0x68, 0xad, 0x5b, 0xf8, 0x9d, 0x27, 0xe7,
	0xe4, 0xc9, 0x81, 0xbd, 0xf3, 0xb6, 0x43, 0xa2, 0x17, 0x6d, 0x28, 0x34, 0xa6, 0xc3, 0xd2, 0x79,
	0x1b, 0x2c, 0x8f, 0x5c, 0x9b, 0xed, 0x3a, 0xdb, 0xf7, 0xd6, 0x4c, 0x89, 0xb8, 0x81, 0xfd, 0xd3,
	0xc4, 0xd6, 0x33, 0xfa, 0xa8, 0x29, 0x48, 0x7c, 0xe7, 0x39, 0x24, 0xed, 0x91, 0xb4, 0x41, 0xa2,
	0x07, 0xfc, 0x48, 0x59, 0xce, 0x8a, 0xad, 0xfc, 0x1e, 0x89, 0x4f, 0x06, 0x87, 0xd5, 0xcb, 0xe4,
	0xf8, 0x15, 0xfc, 0xd7, 0x01, 0x7b, 0x4a, 0x59, 0x1e, 0x17, 0x49, 0x75, 0x28, 0x5d, 0x5b, 0x2e,
	0xd8, 0x3a, 0x60, 0x2f, 0x27, 0x8a, 0x73, 0xd8, 0x74, 0x56, 0x61, 0x1a, 0xe5, 0xac, 0x88, 0xe5,
	0x78, 0xe6, 0x02, 0x62, 0xf4, 0x3e, 0x8d, 0x73, 0x56, 0x24, 0xd5, 0xf9, 0xd0, 0xe0, 0xae, 0xe9,
	0x8f, 0x46, 0x35, 0xf7, 0xde, 0x5b, 0x2f, 0x87, 0xa2, 0x78, 0x83, 0x8b, 0x95, 0xae, 0xfc, 0x14,
	0x22, 0xad, 0xe6, 0x27, 0x47, 0x5a, 0x71, 0x01, 0x3b, 0x85, 0xaf, 0xda, 0xe8, 0xa0, 0xad, 0xa9,
	0xd5, 0x38, 0x66, 0x2b, 0x7f, 0x64, 0x4b, 0xdf, 0xf8, 0x97, 0x6f, 0xf5, 0x0c, 0x67, 0x8b, 0x61,
	0xfc, 0x16, 0x36, 0x83, 0x32, 0xcf, 0x56, 0xfc, 0xe6, 0x8f, 0xcc, 0x2e, 0xff, 0xac, 0x91, 0x13,
	0xff, 0xda, 0x93, 0x71, 0x11, 0xd7, 0x5f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xa5, 0x41, 0xa7, 0xdd,
	0xb4, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ProcessInstanceClient is the client API for ProcessInstance service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProcessInstanceClient interface {
	List(ctx context.Context, in *ProcessInstanceListReq, opts ...grpc.CallOption) (*ProcessInstanceListResp, error)
}

type processInstanceClient struct {
	cc *grpc.ClientConn
}

func NewProcessInstanceClient(cc *grpc.ClientConn) ProcessInstanceClient {
	return &processInstanceClient{cc}
}

func (c *processInstanceClient) List(ctx context.Context, in *ProcessInstanceListReq, opts ...grpc.CallOption) (*ProcessInstanceListResp, error) {
	out := new(ProcessInstanceListResp)
	err := c.cc.Invoke(ctx, "/pb.ProcessInstance/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProcessInstanceServer is the server API for ProcessInstance service.
type ProcessInstanceServer interface {
	List(context.Context, *ProcessInstanceListReq) (*ProcessInstanceListResp, error)
}

// UnimplementedProcessInstanceServer can be embedded to have forward compatible implementations.
type UnimplementedProcessInstanceServer struct {
}

func (*UnimplementedProcessInstanceServer) List(ctx context.Context, req *ProcessInstanceListReq) (*ProcessInstanceListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}

func RegisterProcessInstanceServer(s *grpc.Server, srv ProcessInstanceServer) {
	s.RegisterService(&_ProcessInstance_serviceDesc, srv)
}

func _ProcessInstance_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProcessInstanceListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProcessInstanceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.ProcessInstance/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProcessInstanceServer).List(ctx, req.(*ProcessInstanceListReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _ProcessInstance_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.ProcessInstance",
	HandlerType: (*ProcessInstanceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "List",
			Handler:    _ProcessInstance_List_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "process_instance.proto",
}
